name: some-people-prod


networks:
  default-tier:
    driver: bridge


x-backend-base: &backend_base
  image: some-people.prod.backend
  restart: always
  build:
    context: ..
    dockerfile: ./docker/images/config.Dockerfile
  env_file: ../config/.env
  volumes:
    - ../config:/app
  networks:
    - default-tier

x-frontend-base: &frontend_base
  image: some-people.prod.frontend
  restart: always
  build:
    context: ..
    dockerfile: ./docker/images/frontend.dev.Dockerfile
  volumes:
    - ../frontend:/app/
  networks:
    - default-tier

x-container-user: &container_user
  user: "1018:1018"
  group_add:
    - root


services:

  ########
  # CORE #
  ########

  postgresql:
    <<: [ *container_user ]
    image: 'bitnami/postgresql:15'
    restart: always
    env_file: ../backend/.env
    # ports:
    #   - "8432:5432"
    networks:
      - default-tier
    volumes:
      - ./postgres/data:/bitnami/postgresql/
      - ./postgres/initdb:/docker-entrypoint-initdb.d/

  # redis:
  #   restart: always
  #   image: "bitnami/redis:latest"
  #   command: redis-server
  #       --loglevel debug
  #       --bind 0.0.0.0
  #       --port 6379
  #       --rename-command CONFIG hashrconfig
  #       --maxmemory 2gb
  #       --maxmemory-policy allkeys-lru
  #       --save ""
  #   networks:
  #     - rezidual-tier


  ##############
  # INTERFACES #
  ##############

  interface.api:
    <<: [ *backend_base, *container_user ]
    command:
      - |
        python manage.py runserver 0:8000
    ports:
      - "8101:8000"


  ###########
  # DAEMONS #
  ###########

  bot:
    <<: [ *backend_base ]
    restart: always
    command:
      - |
        python bot/bot.py


  ############
  # BUILDERS #
  ############

  builder.frontend:
    <<: [ *frontend_base, *container_user ]
    restart: "no"
    profiles:
      - build
    command:
      - |
        # yarn
        yarn build
        rm -rf dist
        mv dist_tmp dist

  builder.staticfiles:
    <<: [ *backend_base, *container_user ]
    restart: "no"
    profiles:
      - build
    command:
      - |
        python manage.py collectstatic
