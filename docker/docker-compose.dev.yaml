version: "3.3"
name: some-people


x-inject-external-traefik: &traefik
  name: traefik_default
  external: true

x-networks: &networks
  networks:
    - default
    - traefik

x-default-user: &default_user
  user: "1000:1000"
  group_add:
    - root

networks:
  traefik:
    <<: [ *traefik ]
  default:
    driver: bridge


x-backend-base: &backend_base
  image: pintopay.dev.backend
  restart: always
  build:
    context: ..
    dockerfile: ./docker/images/backend.Dockerfile
  env_file: ../backend/.env
  depends_on:
    - postgresql
  volumes:
    - ../backend:/app
  networks:
    - default-tier

x-frontend-base: &frontend_base
  image: pintopay.dev.frontend
  restart: always
  build:
    context: ..
    dockerfile: ./docker/images/frontend.dev.Dockerfile
  volumes:
    - ../frontend:/app/


services:
#  daemon.echoip:
#    <<: [ *networks, *default_user ]
#    image: mpolden/echoip
#    restart: always
#    ports:
#      - "7777:8080"
#    volumes:
#      - ./geolite_db:/opt/geolite/
#    command: '-a /opt/geolite/GeoLite2-ASN.mmdb -c /opt/geolite/GeoLite2-City.mmdb -f /opt/geolite/GeoLite2-Country.mmdb'


  postgresql:
    <<: [ *networks, *default_user ]
    restart: always
    image: 'bitnami/postgresql:15'
    env_file: ../backend/.env
    volumes:
      - postgres_data:/bitnami/postgresql/
      - ./postgres/initdb:/docker-entrypoint-initdb.d/


#  daemon.cache_updater:
#    <<: [ *networks, *default_user, *backend_base ]
#    restart: "no"
#    command: python daemons/cache_updater/entrypoint.py
#    depends_on:
#      - daemon.echoip

  admin:
    <<: [ *networks, *backend_base ]
    command:
      - |
        python manage.py runserver 0:8000
    expose: [ 8000 ]
    labels:
      traefik.enable: true
      traefik.docker.network: traefik_default
      traefik.http.routers.some-people-v1-admin.rule: Host(`v1.admin.some-people.localhost`)
      traefik.http.routers.some-people-v1-admin.entrypoints: web

  bot:
    <<: [ *networks, *default_user, *backend_base ]
    restart: always
    command:
      - |
        python apps/notifications/bot/bot.py


  app:
    <<: [ *networks, *default_user, *frontend_base ]
    command:
      - |
        yarn serve
    expose: [ 8080 ]
    environment:
     - API_URL=http://admin:8000/
       # - API_URL=https://pintopay.club/
    labels:
      traefik.enable: true
      traefik.docker.network: traefik_default
      traefik.http.routers.some-people-v1-app.rule: Host(`v1.app.some-people.localhost`)
      traefik.http.routers.some-people-v1-app.entrypoints: web


volumes:
  postgres_data: { }
